/*
 * Copyright (C) 2021 Daniel Anderson
 *
 * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.
 */

import { createStyleSheet } from '@lse/core'
import { letThereBeLight } from '@lse/react'

// Demonstrates text element truncation with textOverflow and maxLines style properties.

const sheet = createStyleSheet({
  textOverflowEllipsis: {
    textOverflow: 'ellipsis',
    '@extend': '%cell'
  },
  textOverflowClip: {
    textOverflow: 'clip',
    '@extend': '%cell'
  },
  body: {
    padding: '4vh',
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    backgroundColor: '#264653',
    '@extend': '%absoluteFill'
  },
  header: {
    padding: '2vh',
    color: '#264653',
    backgroundColor: 'white',
    fontSize: '2.5vh'
  },
  container: {
    width: '49%',
    marginBottom: '4vh',
    border: 2,
    borderColor: 'white',
  },
  '%cell': {
    textAlign: 'center',
    fontSize: '2.5vh',
    color: 'lightgray',
    padding: '2vh',
    borderTop: 2,
    borderColor: 'white',
  }
})

const messageMultiline = 'Cras mauris nisl, pharetra a dapibus et, gravida vitae velit. Vestibulum posuere faucibus odio et ultrices. Ut egestas hendrerit magna a commodo. Mauris commodo nisl sit amet euismod tristique. Etiam varius libero a pharetra eleifend. Duis commodo euismod erat, sed vestibulum sapien commodo ac.'

const Column = ({exampleClass, style, children}) => (
  <box class={sheet.container}>
    <text class={sheet.header}>{children}</text>
    <text class={exampleClass} style={style}>{messageMultiline}</text>
  </box>
)

const TextTruncateApp = () => (
  <box class={sheet.body}>
    <Column exampleClass={sheet.textOverflowEllipsis} style={{maxLines: 2}}>maxLines: 2, textOverflow: 'ellipsis'</Column>
    <Column exampleClass={sheet.textOverflowClip} style={{maxLines: 2}}>maxLines: 2, textOverflow: 'clip'</Column>
  </box>
)

letThereBeLight(<TextTruncateApp />, { scene: { fullscreen: false } })
