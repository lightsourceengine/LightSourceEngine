name: lse-runtime-packages

on: workflow_dispatch

env:
  npm_config_lse_install_opts: --jobs max
  npm_config_lse_enable_native_tests: 0
  CI_URL: https://github.com/lightsourceengine/ci/releases/download/v1.0.0

jobs:
  build-lse-node-linux-x64-job:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.0.0

      - name: Linux Packages
        uses: ./.github/actions/apt-get
        with:
          ppa: 'ubuntu-toolchain-r-test'
          packages: g++-8 gcc-8

      - name: Use GCC 8
        uses: ./.github/actions/use-gcc-8

      - name: Create lse-node Package
        run: |
          yarn
          ./build-lse-node.js --platform linux --arch x64 --sdl-profile system
        shell: bash
        working-directory: scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-runtime-packages-artifact
          if-no-files-found: error
          retention-days: 3
          path: build/lse-node-*.tgz

  build-lse-node-linux-arm64-job:
    runs-on: ubuntu-18.04
    env:
      CROSS_TOOLCHAIN_VERSION: 8
      CROSS_TOOLCHAIN_PREFIX: aarch64-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: srcroot
          submodules: recursive

      - name: Checkout ci
        uses: actions/checkout@v2
        with:
          repository: lightsourceengine/ci
          path: ci

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.0.0

      - name: Linux Packages
        uses: ./srcroot/.github/actions/apt-get
        with:
          packages: g++-8-aarch64-linux-gnu

      - name: Create lse-node Package
        run: |
          export PATH="${{github.workspace}}/ci/bin:${PATH}"
          yarn
          ./build-lse-node.js --platform linux --arch arm64 --sdl-profile system
        shell: bash
        working-directory: srcroot/scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-runtime-packages-artifact
          if-no-files-found: error
          retention-days: 3
          path: srcroot/build/lse-node-*.tgz

  build-lse-node-mac-x64-job:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: srcroot
          submodules: recursive

      - name: Download SDL Frameworks
        run: |
          wget ${CI_URL}/SDL2-2.0.14.framework.tgz
          wget ${CI_URL}/SDL2_mixer-2.0.4.framework.tgz
        shell: bash

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.0.0

      - name: Create lse-node Package
        run: |
          yarn
          ./build-lse-node.js --sdl-profile framework --sdl-runtime-pkg "${GITHUB_WORKSPACE}/SDL2-2.0.14.framework.tgz" --sdl-mixer-runtime-pkg "${GITHUB_WORKSPACE}/SDL2_mixer-2.0.4.framework.tgz"
        shell: bash
        working-directory: srcroot/scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-runtime-packages-artifact
          if-no-files-found: error
          retention-days: 3
          path: srcroot/build/lse-node-*.tgz

  build-lse-node-win-x64-job:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: srcroot
          submodules: recursive

      - name: Download SDL Runtime
        run: |
          choco install wget
          wget ${CI_URL}/SDL2-2.0.14-win32-x64.zip
          wget ${CI_URL}/SDL2_mixer-2.0.4-win32-x64.zip
        shell: bash

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.0.0

      - name: Create lse-node Package
        run: |
          yarn
          ./build-lse-node.js --sdl-profile dll --sdl-runtime-pkg "${GITHUB_WORKSPACE}/SDL2-2.0.14-win32-x64.zip" --sdl-mixer-runtime-pkg "${GITHUB_WORKSPACE}/SDL2_mixer-2.0.4-win32-x64.zip"
        shell: bash
        working-directory: srcroot/scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-runtime-packages-artifact
          if-no-files-found: error
          retention-days: 3
          path: srcroot/build/lse-node-*.zip

  build-lse-node-linux-arm-job:
    runs-on: ubuntu-18.04
    env:
      CROSS_TOOLCHAIN_PREFIX: arm-rpi-linux-gnueabihf
    strategy:
      matrix:
        include:
          - arch: armv7l
            build_lse_node_args: --node-binary-source custom --node-custom-tag full --sdl-profile system
          - arch: armv7l
            build_lse_node_args: --node-binary-source custom --node-custom-tag pi_xnpm_xintl --sdl-profile native --profile pi --sdl-runtime-pkg ${GITHUB_WORKSPACE}/SDL2-2.0.14-armv7l-pi --compress-node-binary --strip-node-binary --strip-lse-binary --minimal-node-install
          - arch: armv7l
            build_lse_node_args: --node-binary-source custom --node-custom-tag pi_xnpm_xintl_xhttp --sdl-profile system --profile nclassic --compress-node-binary --strip-node-binary --strip-lse-binary --minimal-node-install
          - arch: armv6l
            build_lse_node_args: --node-binary-source custom --node-custom-tag full --sdl-profile system
          - arch: armv6l
            build_lse_node_args: --node-binary-source custom --node-custom-tag pi_xnpm_xintl --sdl-profile native --profile pi --sdl-runtime-pkg ${GITHUB_WORKSPACE}/SDL2-2.0.14-armv6l-pi --compress-node-binary --strip-node-binary --strip-lse-binary --minimal-node-install
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: srcroot
          submodules: recursive

      - name: Get ARM Toolchain
        run: |
          wget ${CI_URL}/x64-gcc-8.3.0.tar.xz
          tar -xJf x64-gcc-8.3.0.tar.xz
          echo "${{github.workspace}}/x64-gcc-8.3.0/arm-rpi-linux-gnueabihf/bin" >> $GITHUB_PATH
        shell: bash

      - name: Download SDL Runtime
        if: contains(matrix.build_lse_node_args, '--sdl-runtime-pkg')
        run: |
          wget ${CI_URL}/SDL2-2.0.14-${{ matrix.arch }}-pi.tar.gz
          tar -xzf SDL2-2.0.14-${{ matrix.arch }}-pi.tar.gz
        shell: bash

      - name: Install UPX
        if: contains(matrix.build_lse_node_args, '--compress-node-binary')
        run: |
          echo "${GITHUB_WORKSPACE}/upx-3.96-amd64_linux" >> $GITHUB_PATH
          curl -L https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar -xJ
        shell: bash

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.0.0

      - name: Create lse-node Package
        run: |
          yarn
          ./build-lse-node.js --platform linux --arch ${{ matrix.arch }} ${{ matrix.build_lse_node_args }}
        shell: bash
        working-directory: srcroot/scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-runtime-packages-artifact
          if-no-files-found: error
          retention-days: 3
          path: |
            srcroot/build/lse-node-*.tgz
            srcroot/build/lse-node-*.hmod
