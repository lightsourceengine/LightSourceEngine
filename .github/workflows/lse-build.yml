name: lse-build

on:
  push:
    branches:
      - master

env:
  npm_config_lse_install_opts: --jobs max
  npm_config_lse_enable_native_tests: 0

jobs:
  build-linux-x64-job:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[ci skip]') == false
    runs-on: ubuntu-18.04
    env:
      npm_config_lse_enable_native_tests: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 15.6.0

      - name: Linux Packages
        uses: ./.github/actions/apt-get
        with:
          ppa: 'ubuntu-toolchain-r-test'
          packages: g++-6 gcc-6

      - name: Use GCC 6
        uses: ./.github/actions/use-gcc-6

      - name: Build
        run: yarn --force
        shell: bash

      - name: CPP Lint
        run: yarn run cpplint
        working-directory: packages/@lse/core
        shell: bash

      - name: JS Test (+ JS Lint)
        run: yarn run test
        shell: bash

  build-lse-node-linux-x64-job:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[ci skip]') == false
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 15.6.0

      - name: Linux Packages
        uses: ./.github/actions/apt-get
        with:
          ppa: 'ubuntu-toolchain-r-test'
          packages: g++-6 gcc-6

      - name: Use GCC 6
        uses: ./.github/actions/use-gcc-6

      - name: Create lse-node Package
        run: |
          yarn
          ./build-lse-node.js --platform linux --arch x64 --sdl-profile system
        shell: bash
        working-directory: scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-node-artifact
          if-no-files-found: error
          retention-days: 3
          path: build/*.tar.gz

  build-lse-node-linux-arm-job:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[ci skip]') == false
    runs-on: ubuntu-18.04
    env:
      CROSSTOOLS_HOME: ${{ github.workspace }}/crosstools
    strategy:
      matrix:
        include:
          - arch: armv7l
            build_lse_node_args: --sdl-profile system
          - arch: armv7l
            build_lse_node_args: --sdl-profile native --profile pi --sdl-runtime-pkg ${{ github.workspace }}/SDL2-2.0.14-armv7l-pi --compress-node-binary --strip-node-binary --minimal-node-install
          - arch: armv7l
            build_lse_node_args: --sdl-profile system --profile nclassic --compress-node-binary --strip-node-binary --minimal-node-install
          - arch: armv6l
            build_lse_node_args: --sdl-profile system
          - arch: armv6l
            build_lse_node_args: --sdl-profile native --profile pi --sdl-runtime-pkg ${{ github.workspace }}/SDL2-2.0.14-armv6l-pi --compress-node-binary --strip-node-binary --minimal-node-install
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: srcroot
          submodules: recursive

      - name: Checkout crosstools
        uses: actions/checkout@v2
        with:
          repository: lightsourceengine/crosstools
          path: crosstools

      - name: Setup crosstools
        run: . ${CROSSTOOLS_HOME}/bin/x64-gcc-6.3.1.env
        shell: bash

      - name: Checkout ci-packages
        if: contains(matrix.build_lse_node_args, '--sdl-runtime-pkg')
        uses: actions/checkout@v2
        with:
          repository: lightsourceengine/ci-packages
          path: ci-packages

      - name: Extract SDL Package
        if: contains(matrix.build_lse_node_args, '--sdl-runtime-pkg')
        run: tar -xzf ci-packages/SDL2-2.0.14-${{ matrix.arch }}-pi.tar.gz
        shell: bash

      - name: Install UPX
        if: contains(matrix.build_lse_node_args, '--compress-node-binary')
        run: |
          curl https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar xJ
          export PATH="${{ github.workspace }}/upx-3.96-amd64_linux:$PATH"
        shell: bash

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 15.6.0

      - name: Create lse-node Package
        run: |
          yarn
          ./build-lse-node.js --platform linux --arch ${{ matrix.arch }} --crosstools-home ${CROSSTOOLS_HOME} ${{ matrix.build_lse_node_args }}
        shell: bash
        working-directory: srcroot/scripts

      - name: Upload lse-node Package
        uses: actions/upload-artifact@v2
        with:
          name: lse-node-artifact
          if-no-files-found: error
          retention-days: 3
          path: |
            srcroot/build/*.tar.gz
            srcroot/build/*.hmod
