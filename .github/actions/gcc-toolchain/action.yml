name: 'gcc-toolchain'
description: 'Installs an x64 gcc binary for compiling to target architectures of armhf, arm64 or x64. This action assumes the build is running on an x64 ubuntu system. '
inputs:
  arch:
    description: 'Values: armhf, arm64, x64'
    required: true
  version:
    description: 'Values by arch: armhf (6.5.0, 8.3.0), aarch64 (8), x64 (5,6,7,8)'
    required: true
runs:
  using: 'composite'
  steps:
    - run: |
        if [ "${{ inputs.arch }}" = "armhf" ]; then
          V_CI_URL=${CI_URL:-https://github.com/lightsourceengine/ci/releases/download/v1.1.0}
          wget ${V_CI_URL}/x64-gcc-${{ inputs.version }}.tar.xz
          tar -xJf x64-gcc-${{ inputs.version }}.tar.xz
          echo "${GITHUB_WORKSPACE}/x64-gcc-${{ inputs.version }}/arm-rpi-linux-gnueabihf/bin" >> $GITHUB_PATH
          echo "CROSS_TOOLCHAIN_PREFIX=arm-rpi-linux-gnueabihf" >> $GITHUB_ENV
        fi
      shell: bash
    - run: |
        if [ "${{ inputs.ppa }}" = "aarch64" ]; then
          sudo apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
          sudo apt-get update
          sudo apt-get install -y g++-${{ inputs.vesion }}-aarch64-linux-gnu
          echo "CROSS_TOOLCHAIN_VERSION=8" >> $GIT_ENV
          echo "CROSS_TOOLCHAIN_PREFIX=aarch64-linux-gnu" >> $GITHUB_ENV
        fi
      shell: bash
    - run: |
        if [ "${{ inputs.ppa }}" = "x64" ]; then
          sudo apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
          sudo apt-get update
          sudo apt-get install -y g++-${{ inputs.vesion }}
          sudo ln -s /usr/bin/gcc-${{ inputs.vesion }} /usr/local/bin/gcc
          sudo ln -s /usr/bin/g++-${{ inputs.vesion }} /usr/local/bin/g++
        fi
      shell: bash
