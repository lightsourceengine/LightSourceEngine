language: node_js
node_js: 14
dist: xenial
env:
  global:
    - npm_config_lse_install_opts="--jobs max"
    - NODE_DOWNLOADS="${HOME}/node_downloads"
    - LSE_CACHE="${HOME}/lse-cache"
    - CROSSTOOLS_HOME="${LSE_CACHE}/crosstools"
    - PATH="${LSE_CACHE}/upx:${PATH}"
    - ARTIFACTS_TARGET_PATHS="/${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}"
cache:
  yarn: true
  directories:
    - ${HOME}/node_downloads
    - ${HOME}/lse-cache
    - ${HOME}/.nvm
matrix:
  include:
    - name: "linux-x64 [packaging]"
      os: linux
      addons:
        artifacts:
          branch: master
          paths:
            - $(ls build/npm/publishable/*.tgz | tr "\n" ":")
      install: (cd scripts && yarn)
      script: ./scripts/create-npm-packages.sh
    - name: "windows-x64 [full-build]"
      node_js: 14
      os: windows
      env: YARN_GPG=no npm_config_lse_enable_native_tests=1
      before_install: set -e
      install: yarn --force
      script: yarn test
    - name: "windows-x64 [lse-node]"
      node_js: 14
      os: windows
      env: YARN_GPG=no
      before_install:
        - set -e
        - ./scripts/ci/lse-git-clone.sh "ci-packages"
        - choco install awscli
      install: skip
      script:
        - (cd scripts && yarn)
        - ./scripts/build-lse-node.js --sdl-profile dll --sdl-runtime-pkg "${LSE_CACHE}/ci-packages/SDL2-2.0.12-win32-x64.zip" --sdl-mixer-runtime-pkg "${LSE_CACHE}/ci-packages/SDL2_mixer-2.0.4-win32-x64.zip" --node-binary-cache "${NODE_DOWNLOADS}"
      after_success:
        - |
          if [ $TRAVIS_BRANCH == "master" ]; then
            export "PATH=/c/Program Files/Amazon/AWSCLIV2:$PATH"
            aws s3 cp build "s3://${ARTIFACTS_BUCKET}${ARTIFACTS_TARGET_PATHS}/build" --recursive || echo "Failed to upload to S3."
          fi
    - name: "linux-x64 [full-build]"
      os: linux
      env: npm_config_lse_enable_native_tests=1
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [gcc-6, g++-6]
      before_install:
        - set -e
        - sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-6 /usr/local/bin/g++
      install: yarn --force
      script:
        - (cd packages/@lse/core && yarn run cpplint)
        - yarn test
    - name: "linux-x64 [lse-node]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [gcc-6, g++-6]
        artifacts:
          branch: master
          paths:
            - $(ls build/*.tar.gz | tr "\n" ":")
      before_install:
        - set -e
        - sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-6 /usr/local/bin/g++
      install:
        - (cd scripts && yarn)
        - ./scripts/build-lse-node.js --sdl-profile system --node-binary-cache "${NODE_DOWNLOADS}"
      script: skip
    - name: "darwin-x64 [full-build]"
      os: osx
      env: npm_config_lse_enable_native_tests=1
      install: yarn --force
      script:
        - (cd packages/@lse/core && yarn run cpplint)
        - yarn test
    - name: "darwin-x64 [lse-node]"
      os: osx
      before_install:
        - set -e
        - ./scripts/ci/lse-git-clone.sh "ci-packages"
      install:
        - set +e
        - (cd scripts && yarn) # XXX: travis hung here when yarn returned non-zero for a warning, unset -e to get output
        - set -e
        - ./scripts/build-lse-node.js --sdl-profile framework --sdl-runtime-pkg "${LSE_CACHE}/ci-packages/SDL2-2.0.12.framework.tar.gz" --sdl-mixer-runtime-pkg "${LSE_CACHE}/ci-packages/SDL2_mixer-2.0.4.framework.tar.gz" --node-binary-cache "$NODE_DOWNLOADS"
      script: skip
      addons:
        artifacts:
          branch: master
          paths:
            - $(ls build/*.tar.gz | tr "\n" ":")
    - name: "linux-armv7l [lse-node, lse-node-pi]"
      os: linux
      addons:
        apt:
          packages: [ patchelf ]
        artifacts:
          branch: master
          paths:
            - $(ls build/*.tar.gz | tr "\n" ":")
      before_install:
        - set -e
        - ./scripts/ci/lse-git-clone.sh "crosstools" "ci-packages"
        - ./scripts/ci/get-upx.sh
        - . ${CROSSTOOLS_HOME}/bin/x64-gcc-6.3.1.env
        - tar -xzf "${LSE_CACHE}/ci-packages/SDL2-2.0.12-armv7l-pi.tar.gz" --directory "${LSE_CACHE}"
      install:
        - (cd scripts && yarn)
        - ./scripts/build-lse-node.js --platform linux --arch armv7l --node-binary-cache "${NODE_DOWNLOADS}" --crosstools-home "${CROSSTOOLS_HOME}"
        - ./scripts/build-lse-node.js --skip-compile --platform linux --arch armv7l --profile pi --sdl-profile native --sdl-runtime-pkg "${LSE_CACHE}/SDL2-2.0.12-armv7l-pi" --compress-node-binary --strip-node-binary --minimal-node-install --node-binary-cache "${NODE_DOWNLOADS}" --crosstools-home "${CROSSTOOLS_HOME}"
      script: skip
    - name: "linux-armv6l [lse-node, lse-node-pi]"
      os: linux
      addons:
        apt:
          packages: [ patchelf ]
        artifacts:
          branch: master
          paths:
            - $(ls build/*.tar.gz | tr "\n" ":")
      before_install:
        - set -e
        - ./scripts/ci/lse-git-clone.sh "crosstools" "ci-packages"
        - ./scripts/ci/get-upx.sh
        - . ${CROSSTOOLS_HOME}/bin/x64-gcc-6.3.1.env
        - tar -xzf "${LSE_CACHE}/ci-packages/SDL2-2.0.12-armv6l-pi.tar.gz" --directory "${LSE_CACHE}"
      install:
        - (cd scripts && yarn)
        - ./scripts/build-lse-node.js --platform linux --arch armv6l --node-binary-cache "${NODE_DOWNLOADS}" --crosstools-home "${CROSSTOOLS_HOME}"
        - ./scripts/build-lse-node.js --skip-compile --platform linux --arch armv6l --profile pi --sdl-profile native --sdl-runtime-pkg "${LSE_CACHE}/SDL2-2.0.12-armv6l-pi" --compress-node-binary --strip-node-binary --minimal-node-install --node-binary-cache "${NODE_DOWNLOADS}" --crosstools-home "${CROSSTOOLS_HOME}"
      script: skip
