language: node_js
node_js: 14
dist: xenial
env:
  global:
    - npm_config_ls_install_opts="--jobs max"
    - LS_NODE_VERSION=v14.8.0
    - NODE_DOWNLOADS="${HOME}/node_downloads"
    - CROSSTOOLS_HOME="${HOME}/crosstools"
cache:
  yarn: true
  directories:
    - ${HOME}/node_downloads

matrix:
  include:
    - name: "windows-x64 [full-build]"
      os: windows
      env: YARN_GPG=no npm_config_ls_enable_native_tests=1
      before_install:
        - set -e
        - git clone --depth 1 https://github.com/lightsourceengine/ci-packages.git "${HOME}/ci-packages"
        - powershell expand-archive -path "$HOME/ci-packages/SDL2/2.0.10/SDL2-devel-2.0.10-VC.zip" -destinationpath "$HOME"
        - powershell expand-archive -path "$HOME/ci-packages/SDL2_mixer/2.0.4/SDL2_mixer-devel-2.0.4-VC.zip" -destinationpath "$HOME"
      install: yarn --force
      script: skip
    - name: "linux-x64 [full-build]"
      os: linux
      env: npm_config_ls_enable_native_tests=1
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [gcc-6, g++-6]
      before_install:
        - set -e
        - sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-6 /usr/local/bin/g++
      install: yarn --force
      script: skip
    - name: "darwin-x64 [full-build]"
      os: osx
      env: npm_config_ls_enable_native_tests=1
      install: yarn --force
      script: yarn run lint
    - name: "darwin-x64 [lse-node]"
      os: osx
      before_install:
        - set -e
        - mkdir -p "$HOME/Frameworks"
        - mkdir -p "${NODE_DOWNLOADS}"
        - . ${HOME}/.nvm/nvm.sh
        - nvm install $LS_NODE_VERSION
        - git clone --depth 1 https://github.com/lightsourceengine/ci-packages.git "${HOME}/ci-packages"
        - tar -xzf "${HOME}/ci-packages/SDL2-2.0.12.framework.tar.gz" --directory "$HOME/Frameworks"
        - tar -xzf "${HOME}/ci-packages/SDL2_mixer-2.0.4.framework.tar.gz" --directory "$HOME/Frameworks"
      install:
        - set +e
        - (cd scripts && yarn) # XXX: travis hung here when yarn returned non-zero for a warning, unset -e to get output
        - set -e
        - ./scripts/build-lse-node.js --sdl-profile framework --sdl-runtime-pkg "$HOME/Frameworks/SDL2.framework" --sdl-mixer-runtime-pkg "$HOME/Frameworks/SDL2_mixer.framework" --node-binary-cache "$NODE_DOWNLOADS"
      script: skip
    - name: "linux-armv7l [lse-node, pi-rpi, pi-kmsdrm]"
      os: linux
      addons:
        apt:
          packages: [ patchelf ]
      before_install:
        - set -e
        - mkdir -p "${NODE_DOWNLOADS}"
        - . ${HOME}/.nvm/nvm.sh
        - nvm install $LS_NODE_VERSION
        - git clone --depth 1 https://github.com/lightsourceengine/crosstools.git "${HOME}/crosstools"
        - git clone --depth 1 https://github.com/lightsourceengine/ci-packages.git "${HOME}/ci-packages"
        - tar -xzf "${HOME}/ci-packages/SDL2-2.0.12-armv7l-rpi.tar.gz" --directory "$HOME"
        - tar -xzf "${HOME}/ci-packages/SDL2-2.0.12-armv7l-kmsdrm.tar.gz" --directory "$HOME"
        - wget -qO- https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz | tar xJ -C "$HOME"
        - export PATH="$HOME/upx-3.96-amd64_linux:$PATH"
      install:
        - (cd scripts && yarn)
        - ./scripts/build-lse-node.js --platform linux --arch armv7l --node-binary-cache "$NODE_DOWNLOADS" --crosstools-home "$CROSSTOOLS_HOME"
        - ./scripts/build-lse-node.js --skip-compile --platform linux --arch armv7l --profile pi --sdl-profile rpi --sdl-runtime-pkg "${HOME}/SDL2-2.0.12-armv7l-rpi" --compress-node-binary --strip-node-binary --minimal-node-install --node-binary-cache "$NODE_DOWNLOADS" --crosstools-home "$CROSSTOOLS_HOME"
        - ./scripts/build-lse-node.js --skip-compile --platform linux --arch armv7l --profile pi --sdl-profile kmsdrm --sdl-runtime-pkg "${HOME}/SDL2-2.0.12-armv7l-kmsdrm" --compress-node-binary --strip-node-binary --minimal-node-install --node-binary-cache "$NODE_DOWNLOADS" --crosstools-home "$CROSSTOOLS_HOME"
      script: skip
    - name: "npm package build"
      os: linux
      install:
        - cd scripts
        - yarn
        - ./create-npm-packages.sh
      script: skip
